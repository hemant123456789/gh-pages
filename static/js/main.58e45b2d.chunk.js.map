{"version":3,"sources":["Popup.js","Card.js","Home.js","App.js","index.js"],"names":["socket","io","Popup","setPopup","user","setUsers","setCardUser","useState","name","dateAdded","desc","phone","data","setData","useEffect","date","Date","storeDate","getDate","toLocaleString","month","getFullYear","className","onClick","type","value","onChange","e","prevstate","target","uData","_id","axios","put","once","updatedData","post","newData","console","log","Card","allusers","popup","cardUser","id","delete","on","newUsers","filter","Home","users","get","then","res","map","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58e45b2d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\n// For real time\r\nimport io from 'socket.io-client'\r\n\r\n\r\n// For uploading data\r\nimport axios from 'axios'\r\n\r\nconst socket = io('http://localhost:5000/');\r\n\r\nconst Popup = ({ setPopup, user, setUsers, setCardUser }) => {\r\n\r\n    \r\n    const [data, setData] = useState({\r\n        name: '',\r\n        dateAdded: '',\r\n        desc: '',\r\n        phone: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(user) setData(user);\r\n    }, [])\r\n\r\n\r\n    const date = new Date();\r\n    const storeDate = `${date.getDate()} ${date.toLocaleString('default', { month: 'short' })}, ${date.getFullYear()}`\r\n\r\n\r\n    const addUser = () => {\r\n        \r\n        const uData = {\r\n            name: data.name,\r\n            dateAdded: storeDate,\r\n            desc: data.desc,\r\n            phone: data.phone,\r\n        }\r\n\r\n        \r\n        // Now add user data using axios\r\n        axios.post(\"http://localhost:5000/users/create\", uData)\r\n\r\n        // Making realtime using Socket.io\r\n        socket.once('user-added', newData => {\r\n            console.log(newData)\r\n            setUsers((user) => ([...user, newData]))\r\n        })\r\n        \r\n        \r\n        setPopup(false)\r\n    }\r\n\r\n\r\n\r\n    const updateUser = () => {\r\n        const uData = {\r\n            name: data.name,\r\n            dateAdded: data.dateAdded,\r\n            desc: data.desc,\r\n            phone: data.phone,\r\n            _id: data._id\r\n        }\r\n        axios.put(\"http://localhost:5000/users/update\",uData)\r\n\r\n        socket.once('user-updated', (updatedData) => {\r\n            setCardUser(updatedData)\r\n        })\r\n\r\n        setPopup(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"pop-up\">\r\n            <div className=\"input-box\">\r\n                <CancelIcon onClick={() => setPopup(false)} className=\"cross-btn\" />\r\n                <h3>Enter user details:</h3>\r\n                <input type=\"text\"\r\n                    value={data.name}\r\n                    onChange={(e) => setData( prevstate => ({\r\n                        ...prevstate,\r\n                        name: e.target.value\r\n                    }))}\r\n                />\r\n                <input type=\"text\"\r\n                    value={data.desc}\r\n                    onChange={(e) => setData(prevstate => ({\r\n                        ...prevstate,\r\n                        desc: e.target.value\r\n                    }))}\r\n                />\r\n                <input type=\"number\"\r\n                    value={data.phone}\r\n                    onChange={(e) => setData(prevstate => ({\r\n                        ...prevstate,\r\n                        phone: e.target.value\r\n                    }))}\r\n                />\r\n                {!user ? (\r\n                    <button onClick={addUser}>\r\n                        Add User\r\n                    </button>\r\n                ): (\r\n                        <button onClick={updateUser}>\r\n                            Update User\r\n                        </button>\r\n                )}\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Popup\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport Popup from './Popup';\r\nimport axios from 'axios';\r\n\r\n\r\n// For real time\r\nimport io from 'socket.io-client'\r\nconst socket = io('http://localhost:5000/');\r\n\r\nconst Card = ({ type, user, setUsers, allusers }) => {\r\n\r\n    const [popup, setPopup] = useState(false);\r\n\r\n    const [cardUser, setCardUser] = useState(user);\r\n\r\n    const handleDelete = (id) => {\r\n        axios.delete(`http://localhost:5000/users/delete/${id}`)\r\n        socket.on('user-deleted', (id) => {\r\n            const newUsers = allusers.filter(user => {\r\n                return user._id !== id\r\n            })\r\n            setUsers(newUsers)\r\n            console.log(newUsers)\r\n            console.log(id)\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            {\r\n                popup && <Popup setPopup={setPopup} \r\n                user={cardUser} setUsers={setUsers} \r\n                setCardUser={setCardUser}/>\r\n            }\r\n            {(type === 'card') ? (\r\n                <div className=\"cards\">\r\n                    <div className=\"display\">\r\n                        <div className=\"content\">\r\n                            <strong>{cardUser.name}</strong>\r\n                            <p>Added on: {cardUser.dateAdded}</p>\r\n                            <p className=\"about\">{cardUser.desc}</p>\r\n                            <p className=\"phone\">{cardUser.phone}</p>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"btn-container\">\r\n                        <div onClick={() => setPopup(true)}>\r\n                            <CreateIcon />\r\n                        </div>\r\n                        <div onClick={() => handleDelete(user._id)}>\r\n                            <DeleteIcon />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                    <div className=\"addcards\"\r\n                        onClick={() => setPopup(true)}>\r\n                        <AddCircleOutlineIcon />\r\n                    </div>\r\n                )}\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React, {useEffect, useState} from 'react'\r\nimport \"./Home.css\"\r\n\r\n// For fetching data\r\nimport axios from 'axios'\r\n\r\nimport Card from './Card';\r\n\r\nconst Home = () => {\r\n\r\n    const [users, setUsers] = useState()\r\n\r\n    useEffect(()=>{\r\n        axios.get('https://server-112.herokuapp.com/users/read')\r\n        .then(res => {\r\n            setUsers(res.data)\r\n        })\r\n    },[])\r\n\r\n\r\n    console.log(users)\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                {users && users.map(user => (\r\n                    <Card type=\"card\" key={user._id} \r\n                    user={user} allusers={users} \r\n                    setUsers={setUsers}/>\r\n                ))}\r\n                \r\n                <Card type=\"add\" setUsers={setUsers}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport Home from './Home'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <Home />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}